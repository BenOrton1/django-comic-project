{"filter":false,"title":"forms.py","tooltip":"/login/forms.py","undoManager":{"mark":-1,"position":-1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":39,"column":24},"action":"remove","lines":["from django import forms","from django.contrib.auth.models import User","from django.contrib.auth.forms import UserCreationForm","from django.core.exceptions import ValidationError","","","class UserLoginForm(forms.Form):","    username_or_email = forms.CharField()","    password = forms.CharField(widget=forms.PasswordInput)","","","class UserRegistrationForm(UserCreationForm):","    password1 = forms.CharField(label='Password', widget=forms.PasswordInput)","    password2 = forms.CharField(","        label='Password Confirmation',","        widget=forms.PasswordInput","    )","","    class Meta:","        model = User","        fields = ['username', 'email', 'password1', 'password2']","","    def clean_email(self):","        email = self.cleaned_data.get('email')","        username = self.cleaned_data.get('username')","        if User.objects.filter(email=email).exclude(username=username):","            raise forms.ValidationError(u'Email addresses must be unique.')","        return email","","    def clean_password2(self):","        password1 = self.cleaned_data.get('password1')","        password2 = self.cleaned_data.get('password2')","","        if not password1 or not password2:","            raise ValidationError(\"Password must not be empty\")","","        if password1 != password2:","            raise ValidationError(\"Passwords do not match\")","","        return password2"],"id":2},{"start":{"row":0,"column":0},"end":{"row":15,"column":27},"action":"insert","lines":["from django.db import models","from django.contrib.auth.models import User","from django.db.models.signals import post_save","from django.dispatch import receiver","","class Profile(models.Model):","    user = models.OneToOneField(User, on_delete=models.CASCADE)","    bio = models.TextField(max_length=500, blank=True)","    location = models.CharField(max_length=30, blank=True)","    birth_date = models.DateField(null=True, blank=True)","","@receiver(post_save, sender=User)","def update_user_profile(sender, instance, created, **kwargs):","    if created:","        Profile.objects.create(user=instance)","    instance.profile.save()"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1569856106638,"hash":"9a53457aa47e67f0c0ecb2d1674756efe5bfadc3"}